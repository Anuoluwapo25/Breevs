# Generated by Django 5.2 on 2025-10-13 17:20

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('game_id', models.CharField(max_length=100, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('current_round', models.IntegerField(default=1)),
                ('prize_pool', models.DecimalField(decimal_places=2, max_digits=20)),
                ('stake_amount', models.DecimalField(decimal_places=2, max_digits=20)),
                ('winner_address', models.CharField(blank=True, max_length=100, null=True)),
                ('is_completed', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('wallet_address', models.CharField(max_length=100, unique=True)),
                ('joined_at', models.DateTimeField(auto_now_add=True)),
                ('eliminated', models.BooleanField(default=False)),
                ('eliminated_round', models.IntegerField(blank=True, null=True)),
                ('used_risk_mode', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='GameEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_type', models.CharField(choices=[('player_survived', 'Player Survived'), ('player_eliminated', 'Player Eliminated'), ('shield_used', 'Shield Used')], max_length=20)),
                ('player_address', models.CharField(blank=True, max_length=100, null=True)),
                ('event_data', models.JSONField(default=dict)),
                ('block_height', models.IntegerField()),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='events', to='game.game')),
            ],
        ),
        migrations.CreateModel(
            name='GameSummary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ai_summary', models.TextField(help_text='Full narrative summary of the game')),
                ('total_rounds', models.IntegerField()),
                ('total_spins', models.IntegerField()),
                ('elimination_order', models.JSONField(default=list, help_text='List of players in elimination order')),
                ('key_moments', models.JSONField(default=list, help_text='Significant events during the game')),
                ('statistics', models.JSONField(default=dict, help_text='Detailed game statistics')),
                ('excitement_rating', models.IntegerField(blank=True, help_text='AI-generated excitement rating', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('generated_at', models.DateTimeField(auto_now_add=True)),
                ('game', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='summary', to='game.game')),
            ],
            options={
                'verbose_name_plural': 'Game summaries',
                'ordering': ['-generated_at'],
            },
        ),
        migrations.AddField(
            model_name='game',
            name='players',
            field=models.ManyToManyField(related_name='games', to='game.player'),
        ),
        migrations.CreateModel(
            name='GameCommentary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('round_number', models.IntegerField()),
                ('commentary_text', models.TextField()),
                ('commentary_type', models.CharField(choices=[('live', 'Live Commentary'), ('prediction', 'Prediction'), ('analysis', 'Analysis'), ('highlight', 'Highlight')], default='live', max_length=20)),
                ('tension_level', models.IntegerField(help_text='Drama/tension level from 1-10', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('context_data', models.JSONField(default=dict, help_text='Supporting context for this commentary')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='commentaries', to='game.game')),
            ],
            options={
                'verbose_name_plural': 'Game commentaries',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['game', 'round_number'], name='game_gameco_game_id_0b42de_idx'), models.Index(fields=['commentary_type'], name='game_gameco_comment_3d24b9_idx')],
            },
        ),
    ]
